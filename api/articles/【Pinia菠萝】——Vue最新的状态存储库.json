{"title":"Pinia菠萝——Vue的最新状态存储库","uid":"9a20f08646fc7ae20aeb4af73512aebe","slug":"【Pinia菠萝】——Vue最新的状态存储库","date":"2022-12-26T13:14:11.605Z","updated":"2022-12-26T13:14:11.605Z","comments":true,"path":"api/articles/【Pinia菠萝】——Vue最新的状态存储库.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1 id=\"【Pinia-菠萝】——Vue-的最新状态存储库\"><a href=\"#【Pinia-菠萝】——Vue-的最新状态存储库\" class=\"headerlink\" title=\"【Pinia 菠萝】——Vue 的最新状态存储库\"></a>【Pinia 菠萝】——Vue 的最新状态存储库</h1><h2 id=\"Pinia-是什么\"><a href=\"#Pinia-是什么\" class=\"headerlink\" title=\"Pinia 是什么?\"></a><strong>Pinia 是什么?</strong></h2><p><font color= 'BrickRed' >Pinia 是一个用于 Vue 的状态管理库，类似 Vuex, 是 Vue 的另一种状态管理方案       Pinia    支持     Vue2 和 Vue3</font></p>\n<h2 id=\"Pinia-优势\"><a href=\"#Pinia-优势\" class=\"headerlink\" title=\"Pinia 优势\"></a>Pinia 优势</h2><p><font color= 'BrickRed' ><em>mutations</em> 不再存在,更加简洁直观，减少代码冗余</font></p>\n<p><font color= 'BrickRed' >不需要嵌套模块，符合 Vue3 的 Composition api ，让代码更加扁平化</font></p>\n<p><font color= 'BrickRed' >完整的 TypeScript 支持</font></p>\n<p><font color= 'BrickRed' >非常的轻量级， 仅有 1 KB</font></p>\n<p><font color= 'BrickRed' >模块化设计，便于拆分状态</font></p>\n<h2 id=\"安装-Pinia\"><a href=\"#安装-Pinia\" class=\"headerlink\" title=\"安装 Pinia\"></a>安装 Pinia</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> pinia\n<span class=\"token comment\"># 或者使用 npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> pinia<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><font color= 'each' >提示</font></strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">如果您的应用使用 Vue <span class=\"token number\">2</span>，您还需要安装组合 API：<span class=\"token variable\"><span class=\"token variable\">`</span>@vue/composition-api<span class=\"token variable\">`</span></span>。 如果您使用 Nuxt，则应遵循 <span class=\"token punctuation\">[</span>这些说明<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://pinia.web3doc.top/ssr/nuxt.html<span class=\"token punctuation\">)</span>。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>创建一个 pinia（根存储）并将其传递给应用程序：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// main.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createPinia <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"pinia\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pinia <span class=\"token operator\">=</span> <span class=\"token function\">createPinia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>pinia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>创建 store 仓库</strong></p>\n<p><strong><font color= 'Peach' >src  -  store 文件夹   -  index.js</font></strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"pinia\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Counter\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function-variable function\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"郦郦郦\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">countPow2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9 也可以使用this</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传过来的参数 2</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$patch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> a<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"组件内使用：\"><a href=\"#组件内使用：\" class=\"headerlink\" title=\"组件内使用：\"></a>组件内使用：</h2><pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;hello&quot;&gt;\n    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;&#x2F;h1&gt;\n    &lt;p&gt;&#123;&#123; count &#125;&#125;&lt;&#x2F;p&gt;\n    &lt;p&gt;&#123;&#123; name &#125;&#125;&lt;&#x2F;p&gt;\n    &lt;p&gt;&#123;&#123; countPow2 &#125;&#125;&lt;&#x2F;p&gt;\n    &lt;p&gt;&lt;button @click&#x3D;&quot;add&quot;&gt;+&lt;&#x2F;button&gt;&lt;&#x2F;p&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport &#123; store as useCountStore &#125; from &quot;..&#x2F;store&#x2F;index.js&quot;;\nimport &#123; computed &#125; from &quot;vue&quot;;\nexport default &#123;\n  name: &quot;HelloWorld&quot;,\n  props: &#123;\n    msg: String,\n  &#125;,\n  setup() &#123;\n    const store &#x3D; useCountStore();\n    const add &#x3D; () &#x3D;&gt; &#123;\n      store.add(2); &#x2F;&#x2F; 传参\n      store.$patch(&#123;\n        name: (store.name &#x3D; &quot;郦111&quot;),\n      &#125;);\n    &#125;;\n    return &#123;\n      count: computed(() &#x3D;&gt; store.count),\n      countPow2: computed(() &#x3D;&gt; store.countPow2),\n      name: computed(() &#x3D;&gt; store.name),\n      add,\n    &#125;;\n  &#125;,\n&#125;;\n&lt;&#x2F;script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>初始页面：</strong></p>\n<img src=\"https://img1.imgtp.com/2022/09/13/l8Dgzphw.png\" />\n\n<p><strong>使用仓库 actions 方法后的页面：</strong></p>\n<img src=\"https://img1.imgtp.com/2022/09/13/advDR2km.png\" />\n\n<h2 id=\"核心概念\"><a href=\"#核心概念\" class=\"headerlink\" title=\"核心概念\"></a>核心概念</h2><p><strong>Store</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Store 是一个保存状态和业务逻辑的实体，可以自由读取和写入，并通过导入后在 setup 中使用<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>Getters</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Pinia 中的 Getters 作用与 Vuex 中的 Getters 相同，但使用略有差异\nPinia 中的 Getters 直接在 Store 上读取，形似 Store<span class=\"token punctuation\">.</span>xx，就和一般的属性读取一样\n基本使用\nGetter 第一个参数是 state，是当前的状态，也可以使用 <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xx 获取状态\nGetter 中也可以访问其他的 Getter， 或者是其他的 Store<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>actions</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Pinia 没有 Mutations，统一在 actions 中操作 state，通过<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xx 访问相应状态\n虽然可以直接操作 Store，但还是推荐在 actions 中操作，保证状态不被意外改变\naction 和普通的函数一样\naction 同样可以像 Getter 一样访问其他的 Store，同上方式使用其它 Store<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong><font color= 'each' >提示</font></strong></p>\n<p>在 vue 文件中解构 pinia 中的 state 会出现丢失响应式的问题,可以通过 pinia 出的 storeToRefs 去进行解构可以保持变量的响应式</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> storeToRefs <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useCountStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> count <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">storeToRefs</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> count <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"【Pinia 菠萝】——Vue 的最新状态存储库Pinia 是什么?Pinia 是一个用于 Vue 的状态管理库，类似 Vuex, 是 Vue 的另一种状态管理方案 Pinia 支持 Vue2 和 Vue3 Pinia 优势mutations 不再存在,更加简洁直观，减少代码冗余...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Vue","slug":"Vue","count":3,"path":"api/categories/Vue.json"}],"tags":[{"name":"Pinia菠萝","slug":"Pinia菠萝","count":1,"path":"api/tags/Pinia菠萝.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%90Pinia-%E8%8F%A0%E8%90%9D%E3%80%91%E2%80%94%E2%80%94Vue-%E7%9A%84%E6%9C%80%E6%96%B0%E7%8A%B6%E6%80%81%E5%AD%98%E5%82%A8%E5%BA%93\"><span class=\"toc-text\">【Pinia 菠萝】——Vue 的最新状态存储库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Pinia-%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">Pinia 是什么?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Pinia-%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">Pinia 优势</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-Pinia\"><span class=\"toc-text\">安装 Pinia</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%86%85%E4%BD%BF%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">组件内使用：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">核心概念</span></a></li></ol></li></ol>","author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端学习笔记","uid":"adae1d78a6d22cbcc84e90a45ad047a3","slug":"面试题总结","date":"2022-12-26T13:14:11.606Z","updated":"2023-01-30T08:20:17.210Z","comments":true,"path":"api/articles/面试题总结.json","keywords":null,"cover":[],"text":" html 部分1. DOCTYPE 有什么作用？告诉浏览器使用哪个版本的 HTML 规范来渲染文档。DOCTYPE 不存在或形式不正确会导致 HTML 文档以混杂模式呈现。 2.页面导入样式时，使用 link 和 @import 有什么区别？link 引用 CSS 时候，页面载...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"web前端","slug":"web前端","count":3,"path":"api/categories/web前端.json"}],"tags":[{"name":"学习总结","slug":"学习总结","count":1,"path":"api/tags/学习总结.json"}],"author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Vue性能优化——按需引入第三方组件库","uid":"60f5536e92b4df8f10291e74b113744c","slug":"【Vue性能优化】——按需引入第三方组件库","date":"2022-12-26T13:14:11.605Z","updated":"2022-12-26T13:14:11.605Z","comments":true,"path":"api/articles/【Vue性能优化】——按需引入第三方组件库.json","keywords":null,"cover":[],"text":"Vue按需引入第三方组件库为什么按需引入组件库?为了能够快速开发，提高开发效率，通常都会引入第三方组件库，当把组件库全部导入项目中，最后打包项目后会发现项目的体积过大。实际情况中，整个项目可能才使用整个组件库40%的组件，而剩下60%不用就显得非常浪费。我们可以将这用到的40%的...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Vue性能优化","slug":"Vue性能优化","count":1,"path":"api/categories/Vue性能优化.json"}],"tags":[{"name":"Vue性能优化","slug":"Vue性能优化","count":1,"path":"api/tags/Vue性能优化.json"}],"author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}