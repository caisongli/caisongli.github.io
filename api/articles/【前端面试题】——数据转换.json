{"title":"简单的数据转换","uid":"e838993256c291f049ef0caab62402ab","slug":"【前端面试题】——数据转换","date":"2022-12-26T13:14:11.605Z","updated":"2023-02-01T05:22:05.349Z","comments":true,"path":"api/articles/【前端面试题】——数据转换.json","keywords":null,"cover":"https://lcspg.oss-cn-hangzhou.aliyuncs.com/img/10001.jpeg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1 id=\"【前端面试题】——数据转换\"><a href=\"#【前端面试题】——数据转换\" class=\"headerlink\" title=\"【前端面试题】——数据转换\"></a>【前端面试题】——数据转换</h1><h4 id=\"初始数据：\"><a href=\"#初始数据：\" class=\"headerlink\" title=\"初始数据：\"></a><strong>初始数据：</strong></h4><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">const data = <span class=\"token punctuation\">[</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小才\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"fruit\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小俞\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"animal\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小草\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"fruit\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小马\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"fruit\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小王\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"animal\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"小丽\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"haha\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">]</span>;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>转换成</strong>：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">const data = <span class=\"token punctuation\">[</span>\n  fruit<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">1</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span>'小才'<span class=\"token punctuation\">&#125;</span>，<span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">3</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"小俞\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">4</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span> '小马'<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  animal<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">2</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span>'小俞'<span class=\"token punctuation\">&#125;</span>，<span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">5</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"小王\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  haha<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span>'<span class=\"token number\">6</span>'<span class=\"token punctuation\">,</span>name<span class=\"token operator\">:</span>'小丽'<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>代码：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 创建数据转换成函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">alterData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 首先声明两个变量，当容器</span>\n  <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 在确保data数据是数组类型的情况下，在此我先不判断了,需要可以isArray判断下</span>\n  <span class=\"token comment\">// 开始第一层解析，用数组的ruduce方法</span>\n  obj <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">object<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    object<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 让object的key都是data里每个item的type值</span>\n    <span class=\"token keyword\">return</span> object<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 记得输出 object 对象</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印下， &#123; fruit:[],animal:[], haha:[] &#125;  初始容器搭建好了，只要存值就好了</span>\n  <span class=\"token comment\">// 利用 for in 遍历 obj对象,通过filter方法筛选出原始数据data中type值与obj的key相等的对象，存入res数组中</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    res <span class=\"token operator\">=</span> data\n      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> key<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 遍历好就已经完成了归类，再用map方法遍历数组，用delete删除对象里的type属性</span>\n        <span class=\"token keyword\">delete</span> item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 大功告成</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出最后的结果</span>\n<span class=\"token punctuation\">&#125;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">alterData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印结果</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>ps:</strong></p>\n<p><strong>这只是简易版，还有很多判断没有加上，写得不好，或者需要补充的地方，请大佬们在评论区指出</strong>😊</p>\n","text":"【前端面试题】——数据转换初始数据：const data = [ &#123; id: \"1\", name: \"小才\", type: \"fruit\" &#125;, &#123; id: \"2\", name: \"小俞\", type: \"animal\" &#125;, &#123;...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"js面试题","slug":"js面试题","count":4,"path":"api/categories/js面试题.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%90%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E3%80%91%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">【前端面试题】——数据转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E6%95%B0%E6%8D%AE%EF%BC%9A\"><span class=\"toc-text\">初始数据：</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://lcspg.oss-cn-hangzhou.aliyuncs.com/img/avatar.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"判断密码强度","uid":"93caf5b8f94c3a6b610b12e797fcd466","slug":"【前端面试题】——判断密码强度（简易版）","date":"2022-12-26T13:14:11.605Z","updated":"2023-01-30T07:32:48.916Z","comments":true,"path":"api/articles/【前端面试题】——判断密码强度（简易版）.json","keywords":null,"cover":"https://gitee.com/caisong-li/img/raw/master/hz5.jpg","text":"【前端面试题】——判断密码强度（简易版）代码：&lt;body&gt; &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;input&quot; &#x2F;&gt; &lt;span id&#x3D;&quot;massge1...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"js面试题","slug":"js面试题","count":4,"path":"api/categories/js面试题.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://lcspg.oss-cn-hangzhou.aliyuncs.com/img/avatar.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"简单的数据转换(二)","uid":"efb0492528fda01248e58bf9c3ab3caa","slug":"【前端面试题】——数据转换二","date":"2022-12-26T13:14:11.605Z","updated":"2023-02-01T05:45:15.051Z","comments":true,"path":"api/articles/【前端面试题】——数据转换二.json","keywords":null,"cover":"https://lcspg.oss-cn-hangzhou.aliyuncs.com/img/10001.jpg","text":"【前端面试题】——数据转换二初始数据：const data = &#123; a: &#123; b: 3 &#125;, c: 10, d: [1, 8] &#125;; 转换成： const data = &#123;a.b: 3, c: 10, d[1]: 8&#125; ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"js面试题","slug":"js面试题","count":4,"path":"api/categories/js面试题.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"LCS's Blog","slug":"blog-author","avatar":"https://lcspg.oss-cn-hangzhou.aliyuncs.com/img/avatar.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @a <h3>加油！！！</h3>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}